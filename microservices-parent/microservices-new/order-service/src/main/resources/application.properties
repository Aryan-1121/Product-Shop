server.port=8081

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mySql://localhost:3306/order-service
spring.datasource.username=root
spring.datasource.password=wiley
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=update
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
#eureka.client.serviceUrl.defaultZone= http://eureka:password@localhost:8761/eureka

spring.application.name=order-service

# ACTUATOR PROPERTIES
#http://localhost:8081/actuator/health

management.health.circuitbreakers.enabled=true
#we want to expose all actuator endpoints
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always


#   Resilience4j Properties

# closed/open/half-open

#           to see diff states of ckt-breaker
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
#
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
#           format of how ckt-breaker state will change
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
#           after 5 fail req. state will change from closed to open
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
#              when 50% of the call fails
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
#       how much time we need to stay in open state before switching to half open state
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s

                #after 3 successful calls in half-open state it will change to closed state else again switch to open state
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
#       automatic transition b/w states
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true



#       resilience4j timeout properties

        #wait for 4 sec after call before throwing timeout exception
resilience4j.timelimiter.instances.inventory.timeout-duration=4s

#   Resilience4J Retry Properties

resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=2s